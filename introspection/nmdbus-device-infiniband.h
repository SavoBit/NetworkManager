/*
 * Generated by gdbus-codegen 2.40.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __NMDBUS_DEVICE_INFINIBAND_H__
#define __NMDBUS_DEVICE_INFINIBAND_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.NetworkManager.Device.Infiniband */

#define NMDBUS_TYPE_DEVICE_INFINIBAND (nmdbus_device_infiniband_get_type ())
#define NMDBUS_DEVICE_INFINIBAND(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NMDBUS_TYPE_DEVICE_INFINIBAND, NMDBusDeviceInfiniband))
#define NMDBUS_IS_DEVICE_INFINIBAND(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NMDBUS_TYPE_DEVICE_INFINIBAND))
#define NMDBUS_DEVICE_INFINIBAND_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), NMDBUS_TYPE_DEVICE_INFINIBAND, NMDBusDeviceInfinibandIface))

struct _NMDBusDeviceInfiniband;
typedef struct _NMDBusDeviceInfiniband NMDBusDeviceInfiniband;
typedef struct _NMDBusDeviceInfinibandIface NMDBusDeviceInfinibandIface;

struct _NMDBusDeviceInfinibandIface
{
  GTypeInterface parent_iface;


  gboolean  (*get_carrier) (NMDBusDeviceInfiniband *object);

  const gchar * (*get_hw_address) (NMDBusDeviceInfiniband *object);

  void (*properties_changed) (
    NMDBusDeviceInfiniband *object,
    GVariant *arg_properties);

};

GType nmdbus_device_infiniband_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *nmdbus_device_infiniband_interface_info (void);
guint nmdbus_device_infiniband_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus signal emissions functions: */
void nmdbus_device_infiniband_emit_properties_changed (
    NMDBusDeviceInfiniband *object,
    GVariant *arg_properties);



/* D-Bus property accessors: */
const gchar *nmdbus_device_infiniband_get_hw_address (NMDBusDeviceInfiniband *object);
gchar *nmdbus_device_infiniband_dup_hw_address (NMDBusDeviceInfiniband *object);
void nmdbus_device_infiniband_set_hw_address (NMDBusDeviceInfiniband *object, const gchar *value);

gboolean nmdbus_device_infiniband_get_carrier (NMDBusDeviceInfiniband *object);
void nmdbus_device_infiniband_set_carrier (NMDBusDeviceInfiniband *object, gboolean value);


/* ---- */

#define NMDBUS_TYPE_DEVICE_INFINIBAND_PROXY (nmdbus_device_infiniband_proxy_get_type ())
#define NMDBUS_DEVICE_INFINIBAND_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NMDBUS_TYPE_DEVICE_INFINIBAND_PROXY, NMDBusDeviceInfinibandProxy))
#define NMDBUS_DEVICE_INFINIBAND_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NMDBUS_TYPE_DEVICE_INFINIBAND_PROXY, NMDBusDeviceInfinibandProxyClass))
#define NMDBUS_DEVICE_INFINIBAND_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NMDBUS_TYPE_DEVICE_INFINIBAND_PROXY, NMDBusDeviceInfinibandProxyClass))
#define NMDBUS_IS_DEVICE_INFINIBAND_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NMDBUS_TYPE_DEVICE_INFINIBAND_PROXY))
#define NMDBUS_IS_DEVICE_INFINIBAND_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NMDBUS_TYPE_DEVICE_INFINIBAND_PROXY))

typedef struct _NMDBusDeviceInfinibandProxy NMDBusDeviceInfinibandProxy;
typedef struct _NMDBusDeviceInfinibandProxyClass NMDBusDeviceInfinibandProxyClass;
typedef struct _NMDBusDeviceInfinibandProxyPrivate NMDBusDeviceInfinibandProxyPrivate;

struct _NMDBusDeviceInfinibandProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  NMDBusDeviceInfinibandProxyPrivate *priv;
};

struct _NMDBusDeviceInfinibandProxyClass
{
  GDBusProxyClass parent_class;
};

GType nmdbus_device_infiniband_proxy_get_type (void) G_GNUC_CONST;

void nmdbus_device_infiniband_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NMDBusDeviceInfiniband *nmdbus_device_infiniband_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
NMDBusDeviceInfiniband *nmdbus_device_infiniband_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void nmdbus_device_infiniband_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NMDBusDeviceInfiniband *nmdbus_device_infiniband_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
NMDBusDeviceInfiniband *nmdbus_device_infiniband_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define NMDBUS_TYPE_DEVICE_INFINIBAND_SKELETON (nmdbus_device_infiniband_skeleton_get_type ())
#define NMDBUS_DEVICE_INFINIBAND_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NMDBUS_TYPE_DEVICE_INFINIBAND_SKELETON, NMDBusDeviceInfinibandSkeleton))
#define NMDBUS_DEVICE_INFINIBAND_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NMDBUS_TYPE_DEVICE_INFINIBAND_SKELETON, NMDBusDeviceInfinibandSkeletonClass))
#define NMDBUS_DEVICE_INFINIBAND_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NMDBUS_TYPE_DEVICE_INFINIBAND_SKELETON, NMDBusDeviceInfinibandSkeletonClass))
#define NMDBUS_IS_DEVICE_INFINIBAND_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NMDBUS_TYPE_DEVICE_INFINIBAND_SKELETON))
#define NMDBUS_IS_DEVICE_INFINIBAND_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NMDBUS_TYPE_DEVICE_INFINIBAND_SKELETON))

typedef struct _NMDBusDeviceInfinibandSkeleton NMDBusDeviceInfinibandSkeleton;
typedef struct _NMDBusDeviceInfinibandSkeletonClass NMDBusDeviceInfinibandSkeletonClass;
typedef struct _NMDBusDeviceInfinibandSkeletonPrivate NMDBusDeviceInfinibandSkeletonPrivate;

struct _NMDBusDeviceInfinibandSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  NMDBusDeviceInfinibandSkeletonPrivate *priv;
};

struct _NMDBusDeviceInfinibandSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType nmdbus_device_infiniband_skeleton_get_type (void) G_GNUC_CONST;

NMDBusDeviceInfiniband *nmdbus_device_infiniband_skeleton_new (void);


G_END_DECLS

#endif /* __NMDBUS_DEVICE_INFINIBAND_H__ */
